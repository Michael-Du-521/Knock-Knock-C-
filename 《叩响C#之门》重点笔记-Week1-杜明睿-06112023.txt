2023/06/11
1.1 C#简介
C#是.NET平台的主打语言
C#对于可以实现同种功能的语法仅保留一种最常用的写法。
C#是面向对象语言，支持单一继承。
Visual Studio 工具-导入和导出设置-重置所有设置-下一步-Visual C#开发设置
Visual Studio 中 用solution来组织多个project
1.4 编译

把数以万计的简单指令链接在一起，就可以准确而高效的完成复杂工作。
机器语言-汇编语言-高级语言
源代码---编译器--->机器语言
C#源代码---初次编译--->MSIL(微软中间语言)---二次编译(JIT即时编译)--->机器语言


2023/06/12
十进制 0 1 2 3 4 5 6 7 8 9

八进制 0 1 2 3 4 5 6 7 11 12

二进制 0 1 10 11 100 101 110 111 1000 1001 1010 1011 1100 1101 1110

（1）多进制转二进制：除以二取余法,因为对于二进制，大于等于2的数都应该进位，只有0和1能够作为余数保留下来，因此通过反复除2，直至被除数被分解为0或1为止。



1.6数据和内存

数据以二进制的形式存放在内存中，
内存是由众多具有两个状态的电子开关组成的。电子开关打开时，代表1；闭合时，代表0。每个电子开关成为一个比特（bit）或位

一般用8个二进制位组成一个字节（Byte），一个字节可以表示0~255之间的整数，即[0,255]
计算机内存是由很多排列整齐的字节组成，为了管理方便，每个字节都有相应的位置编号，即该字节的地址。通过地址可以找到内存中任何一个字节的内容。
1 KB = 1024 B
1 MB = 1024 KB
1 GB = 1024 MB

2 变量

程序的核心是处理数据.
赋值运算符（=）的作用是把在=右侧的表达式值，写入变量所在的内存空间。
使用变量前必须先声明变量。
正数的补码是它本身，
负数的补码
	1将该数的绝对值表示成二进制形式
	2按位取反
	3再加1

2.1.3 short 型 => 仅占用2个字节
2.1.5 uint 型 =>无符号位
Ctrl+F5 启动编译，如果编译阶段没有错误，则启动程序。
2.2实数型变量
float 变量在内存中占4个字节(32位)
实数型数据=符号位+小数部分+指数

备注：1 Byte =8 bits

2.3.5 ASCII and Unicode

Alt + 小键盘输入29482=> “猪” 国标码

{ <= alt + 123 ASCII 码 
|
}
~
2.3.6 转义字符
\' 单引号
\" 双引号
\\ 反斜杠
\0 空
\a 
\b
\f
\n
\r
\t
\v

2.3.7 @控制符

@可以使其修饰的引号内容原样输出，不理会其中的转移字符。

2.4 变量的格式化输出
            #region MyRegion
            int i = 360;
            int j = 60;
            Console.WriteLine(  "{0,6}\n +{1,3}\n--------\n{2,6}",i,j,i+j);
            #endregion

{i，w} 其中i是参数索引，w是宽度值，正值代表右对齐，负值代表左对齐，所在行字符不足宽度值时，以空格补齐。

2.5 变量的命名规则

变量的第一个字符必须是字母、下划线或@
变量不可以与关键字重名。

    1 默认为 int 常量
    1.0 默认为 double 常量
    89L 是 long 型
    3.14f 是float 型

3.1 算数运算符

int n = 5/2; // n=2 因为在C#中两个整数相除的结果仍然为整数，所以5/2的小数部分被舍去了。
3.2 自加运算符

后置自加符 //先赋值（运算、输出），再自增。
前置自加符 //先自增（运算、输出），再赋值。

3.4 优先级

前置自加自减操作符>乘法、除法、取余数>加、减>赋值>后置自加自减操作符
过多的嵌套括号，会使得代码变得难以阅读和修改，因此最好把复杂的表达式分解为数个简单的表达式。

算数运算符的优先级高于关系运算符

3.5 类型转换

隐式转换：把取值范围较小的类型转换为取值范围较大的类型。
显式转换： 语法是再源数据前的括号内添加目标类型。 进行显式转换时，int型变量仅将后面16为原封不动的复制给short型变量，前16位数据一将丢失.

将实型数据赋给整型变量，会舍弃实数的小数部分。

int n =8226589;
short s = checked((short)n);

3.5.3 字符串与数值之间的转换
Convert.ToDouble() 将字符串转化为 double 类型
Convert.ToInt32() 将字符串转换为 int 类型
转换前提是，该输入字符串必须符合数值的有效表达形式

4流程控制

只需要三种控制结构就能写出所有程序 1966年由两位计算机科学家证明
-顺序结构：按书写顺序，从第一条语句开始，按顺序逐句进行。
-选择结构：
    --嵌套选择结构 可以分几次判断，逐步缩小范围。
    --switch语句

数据结构 + 算法（做什么和怎么做、程序框图是算法的体现） = 程序

4.3.2 逻辑运算符

!(x%2==0) x不是偶数

在逻辑表达式的求解中，当运算进行到一半即可判断真假时候，后面的运算将不再执行。

06222023
4.5 循环结构
-while 先判断循环条件的真假，若循环条件为真，则执行循环体内的语句；执行完循环体后，再次检查条件，反复进行，知道循环条件为假时停止。
-do while 先执行一次循环体，然后再判断循环条件
4.5.3 for 语句

4.6
break 可以使得流程跳出switch ； break 还可以跳出循环语句。{中断整个循环}
continue 中断本圈循环

“复杂的事物往往由几种简单的事物组合而成”

5.1 枚举
5.2 结构体
所有定义类型的代码都再主函数外进行编写

Alt + 小键盘输入29482=> “猪” 国标码

{ <= alt + 123 ASCII 码 
|
}
~

6.2 函数

函数是一段被封装起来能够实现一定功能的代码。
函数的定义在主函数外，和主函数并列。








